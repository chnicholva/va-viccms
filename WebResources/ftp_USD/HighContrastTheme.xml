<!-- Region Resource Dictionary-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mucc="clr-namespace:Microsoft.Uii.Csr;assembly=Microsoft.Uii.Csr.Core"
					xmlns:control="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics.Controls;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics"
					xmlns:controlStyles="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics.Controls.Styles;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics"
					xmlns:usd="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics"
					xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
					xmlns:usdDesktop="clr-namespace:Microsoft.Crm.UnifiedServiceDesk"
					xmlns:resx="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Properties"
					xmlns:usdPanelLayouts="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics.PanelLayouts;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics"
					xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
					xmlns:ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
					xmlns:classic="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
					xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
					xmlns:usdstyle="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.Dynamics.Controls.Styles;assembly=Microsoft.Crm.UnifiedServiceDesk.Dynamics"
					xmlns:ProgressIndicator="clr-namespace:Microsoft.Crm.UnifiedServiceDesk.RoundProgressIndicator;assembly=Microsoft.Crm.UnifiedServiceDesk.RoundProgressIndicator"
					xmlns:system="clr-namespace:System;assembly=mscorlib">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/ToolBar/Styles.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/Expander/Styles.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/ComboBox/Styles.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/Textblock/Styles.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/ScrollBar/Styles.xaml"/>
		<ResourceDictionary Source="pack://application:,,,/Microsoft.Xrm.Tooling.Ui.Styles;component/Resources/Button/Styles.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<!-- Region General -->
	<SolidColorBrush x:Key="WindowBackgroundBrush" Color="Transparent"  />
	<SolidColorBrush x:Key="WindowHeaderStyle" Color="#F2F2F2"/>
	<SolidColorBrush x:Key="WindowBackgroundStyle" Color="White"/>
	<SolidColorBrush x:Key="ToolBarBackGroundBrush" Color="#F8F8F8"/>
	<SolidColorBrush x:Key="ToolBarButtonHoverBorder" Color="#0A246A"/>
	<SolidColorBrush x:Key="ToolBarButtonPressedBorder" Color="#0A246A"/>
	<SolidColorBrush x:Key="ToolBarButtonPressed" Color="#B1D6F0"/>
	<SolidColorBrush x:Key="ToolBarButtonHover" Color="#D7EBF9"/>
	<SolidColorBrush x:Key="ToolBarSplitButtonSelectedBrush" Color="#B1D6F0"/>
	<SolidColorBrush x:Key="ToolBarGripper" Color="White"/>
	<SolidColorBrush x:Key="NotificationBarColorBrush" Color="#FFF19D"/>
	<SolidColorBrush x:Key="ToolBarMenuBorder" Color="#666666"/>
	<SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#F9F8F7"/>
	<SolidColorBrush x:Key="GlyphBrush" Color="#444"/>
	<SolidColorBrush x:Key="SelectedBackgroundBrush" Color="White"/>
	<SolidColorBrush x:Key="SelectedForegroundBrush" Color="#9CB6C5"/>
	<SolidColorBrush x:Key="FocusBackgroundBrush" Color="Blue"/>
	<SolidColorBrush x:Key="FocusForegroundBrush" Color="White"/>
	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
	<SolidColorBrush x:Key="ButtonBorder" Color="#FF003C74"/>
	<SolidColorBrush x:Key="NormalBrush" Color="White"/>
	<LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#CCC" Offset="0.0"/>
		<GradientStop Color="#444" Offset="1.0"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ButtonNormalBackgroundFill" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFFFFFFF" Offset="0"/>
		<GradientStop Color="#FFF0F0EA" Offset="0.9"/>
	</LinearGradientBrush>
	<Style x:Key="ComboBoxFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="VerticalSeparatorStyle"
			 TargetType="{x:Type Separator}"
			 BasedOn="{StaticResource {x:Type Separator}}">
		<Setter Property="LayoutTransform">
			<Setter.Value>
				<TransformGroup>
					<TransformGroup.Children>
						<TransformCollection>
							<RotateTransform Angle="90"/>
						</TransformCollection>
					</TransformGroup.Children>
				</TransformGroup>
			</Setter.Value>
		</Setter>
	</Style>
	<Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
	<Style x:Key="ComboBoxTransparentButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Height" Value="Auto"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{x:Static Microsoft_Windows_Themes:ClassicBorderDecorator.ClassicBorderBrush}"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<DockPanel Background="{TemplateBinding Background}" LastChildFill="false" SnapsToDevicePixels="true">
						<Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="AltRaised" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
							<Path Data="{StaticResource DownArrowGeometry}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Microsoft_Windows_Themes:ClassicBorderDecorator>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="BorderStyle" TargetName="Border" Value="AltPressed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="true" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--EndRegion-->

	<!-- Region Window -->
	<Style x:Key="FloatingWindow" TargetType="{x:Type Window}" BasedOn="{StaticResource {x:Type Window}}">
		<Setter Property="Background" Value="{DynamicResource WindowHeaderStyle}"/>
	</Style>
	<Style x:Key="ToolWindow" TargetType="{x:Type Window}" BasedOn="{StaticResource {x:Type Window}}">
		<Setter Property="Background" Value="{DynamicResource WindowHeaderStyle}"/>
	</Style>
	<Style x:Key="LeftPanelGrid" TargetType="{x:Type Grid}">
		<Setter Property="Width" Value="385"/>
	</Style>
	<Style x:Key="MainWindow" TargetType="{x:Type Window}" BasedOn="{StaticResource {x:Type Window}}">
		<Setter Property="Background" Value="{DynamicResource WindowHeaderStyle}"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Visibility" Value="Visible"/>
		<Setter Property="WindowState" Value="Normal"/>
		<Setter Property="SizeToContent" Value="Manual"/>
		<Setter Property="Title" Value="{x:Static resx:Resources.AGENTDESKTOP_MAIN_TITLE}"/>
		<Setter Property="Icon" Value="/UnifiedServiceDesk;component/imageResources/dynamics16-32-48-256.ico"/>
		<Setter Property="FontFamily" Value="Segoe UI" />
	</Style>
	<!--EndRegion-->

	<!-- Region Agent Scripting -->
	<Style x:Key="AgentScriptControlBorderStyle" TargetType="{x:Type Border}">
		<Setter Property="BorderBrush" Value="#D8D8D8"/>
		<Setter Property="BorderThickness" Value="0,1,0,1"/>
	</Style>
	<Style x:Key="AgentScriptTextLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseFontStyle}">
		<Setter Property="Visibility" Value="Collapsed"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="Margin" Value="0,4,0,0"/>
	</Style>
	<Style x:Key="AgentScriptHeaderLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource BaseFontStyle}">
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Margin" Value="0,4,0,2"/>
	</Style>
	<Style x:Key="AgentScriptInstructionsLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource AgentScriptTextLabel}"/>
	<Style x:Key="AgentScriptText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseFontStyle}">
		<Setter Property="TextWrapping" Value="WrapWithOverflow"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Margin" Value="5,5,0,5"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
	</Style>
	<Style x:Key="AgentScriptInstructions" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource AgentScriptText}">
		<Setter Property="FontSize" Value="10"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
	</Style>
	<Style x:Key="AgentScriptAnswer" TargetType="{x:Type control:AgentScriptAnswerButton}" BasedOn="{StaticResource BaseFontStyle}">
		<Setter Property="Foreground" Value="#0072C6"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Margin" Value="1, 0, 0, 0"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type control:AgentScriptAnswerButton}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<StackPanel Orientation="Horizontal">
							<Image x:Name="VisitedImage" Source="/UnifiedServiceDesk;component/imageResources/SymbolCheck.png" Height="16" Width="16" Visibility="Hidden" Margin="0, 0, 1, 0" />
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</StackPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="HasVisited" Value="true">
							<Setter Property="Visibility" TargetName="VisitedImage" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder}"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder}"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
							<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonPressedBorder}"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonPressed}"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
							<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="AgentScriptHistory" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}"/>
	<!--EndRegion-->

	<!-- Region Debugger -->
	<Style x:Key="DebuggerToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid SnapsToDevicePixels="False" Background="Transparent">
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Grid VerticalAlignment="Center">
								<Grid.LayoutTransform>
									<TransformGroup>
										<TransformGroup.Children>
											<TransformCollection>
												<RotateTransform Angle="90"/>
											</TransformCollection>
										</TransformGroup.Children>
									</TransformGroup>
								</Grid.LayoutTransform>
								<Ellipse Fill="{DynamicResource ExpanderArrowFill}"  HorizontalAlignment="Center" x:Name="circle" VerticalAlignment="Center" Width="19" Height="19"/>
								<Path Stroke="white" StrokeThickness="2" HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 0 4 L 8 4 L 4 8 Z"/>
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="arrow" Value="M 0 4 L 8 4 L 4 8 Z"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
							<Setter Property="Fill" TargetName="circle" Value="{DynamicResource ExpanderArrowHoverFill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="white"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
							<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
							<Setter Property="Fill" TargetName="circle" Value="{DynamicResource ExpanderArrowPressedFill}"/>
							<Setter Property="Stroke" TargetName="arrow" Value="white"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ItemContStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource EventsGridItemStyle}"/>
	<Style x:Key="EventsGridItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource BaseFontStyle}">
		<Setter Property="Background" Value="White" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="#444444" />
		<Setter Property="Margin" Value="2"/>
		<Setter Property="MinHeight" Value="25"/>
		<Setter Property="ToolTip" Value="{Binding exception}" />
		<Style.Triggers>
			<DataTrigger Binding="{Binding ConditionResult}" Value="ActionFailed" >
				<Setter Property="Background" Value="#FDC0C0" />
			</DataTrigger>
			<DataTrigger Binding="{Binding ConditionResult}" Value="ConditionFailed" >
				<Setter Property="Background" Value="#FFFF33" />
			</DataTrigger>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Type}" Value="Route" />
					<Condition Binding="{Binding ConditionResult}" Value="ConditionFailed" />
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" Value="#FDC0C0" />
			</MultiDataTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="EventsGridColumnHeaderStyle" TargetType="GridViewColumnHeader" BasedOn="{StaticResource BaseFontStyle}">
		<Setter Property="Background" Value="White" />
		<Setter Property="BorderThickness" Value="1,1,1,1" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Foreground" Value="#666666" />
		<Setter Property="Height" Value="25" />
	</Style>
	<!--EndRegion-->

	<!-- Region Session Tabs Control -->
	<Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Content" Value="r"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="Visibility" Value="Collapsed"/>
		<Setter Property="Margin" Value="0,0,5,0"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontFamily" Value="Webdings"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<ContentPresenter RecognizesAccessKey="True"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SessionTabHeaderStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="FontFamily" Value="{Binding Path=FontFamily, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Label}}}"/>
		<Setter Property="FontSize" Value="{Binding Path=FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Label}}}"/>
		<Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Label}}}"/>
		<Setter Property="Focusable" Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
	</Style>

	<Style x:Key="USDSessionTab"  TargetType="{x:Type TabControl}">
		<Setter Property="Focusable" Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid KeyboardNavigation.TabNavigation="Continue">
						<Border Name="BottomBorder" BorderBrush="{StaticResource AirThemeColor}" BorderThickness="0,0,0,3" Margin="0,0,0,0">
							<TabPanel Name="HeaderPanel" Grid.Row="0" Margin="6,0,0,0" Panel.ZIndex="1" IsItemsHost="True" KeyboardNavigation.TabIndex="1" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="HeaderPanel" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="BottomBorder" Property="BorderThickness" Value="0"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
							<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<Style x:Key="USDSessionTabItem" TargetType="{x:Type TabItem}">
		<Setter Property="Focusable" Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Border Name="Border" BorderBrush="Transparent" BorderThickness="0" CornerRadius="0" Margin="0" Background="Transparent" >
						<DockPanel>
							<Label x:Name="TabLabel" DockPanel.Dock="Left" Foreground="White" FontFamily="Segoe UI" FontSize="14">
								<ContentPresenter x:Name="ContentSite" VerticalAlignment="Top" HorizontalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" Margin="5,0,5,0"/>
							</Label>
							<ProgressIndicator:ChatIndicator Name="ChatIndicator" Visibility="Collapsed" />
							<ProgressIndicator:MainControl Name="ProgressIndicator" Visibility="Collapsed" />
							<Button Name="PART_BTNCLOSE" DockPanel.Dock="Right" Style="{StaticResource CloseButtonStyle}" Command="usd:ActionCommands.CloseSessionTab"/>
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Panel.ZIndex" Value="100"/>
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AirThemeColor}"/>
							<Setter TargetName="Border" Property="Background" Value="{StaticResource AirThemeColor}"/>
							<Setter TargetName="Border" Property="Margin" Value="2,0,0,0"/>
							<Setter TargetName="PART_BTNCLOSE" Property="Visibility" Value="{Binding CloseButtonVisibility}"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
							<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="False">
							<Setter TargetName="TabLabel" Property="Foreground" Value="#666666"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--EndRegion-->

	<!-- Region USD Tabs -->
	<Style x:Key="USDTabPanelStyle" TargetType="{x:Type Grid}">
		<Setter Property="Focusable" Value="True"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
	</Style>
	<Style TargetType="{x:Type TabItem}" x:Key="BaseUSDTab">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="Focusable" Value="True"/>
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Border x:Name="Border" BorderBrush="Transparent" BorderThickness="0" CornerRadius="0" >
						<Grid>
							<TextBlock x:Name="ContentSite" Margin="20,5,20,5" VerticalAlignment="Center" HorizontalAlignment="Center"
									   FontSize="12" FontFamily="Segoe UI" Foreground="#666666">
							<ContentPresenter ContentSource="Header" />
							</TextBlock>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="#9CB6C5"/>
							<Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
							<Setter TargetName="Border" Property="Background" Value="#F2F2F2" />
							<Setter TargetName="ContentSite" Property="Foreground" Value="#262626" />
							<Setter TargetName="ContentSite" Property="FontWeight" Value="Bold"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
							<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Bottom">
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Top"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Bottom"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Left"/>
							</MultiTrigger.Conditions>
							<Setter Property="Padding" Value="11,2,14,2"/>
							<Setter Property="Margin" Value="-1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Right"/>
							</MultiTrigger.Conditions>
							<Setter Property="Padding" Value="14,2,11,2"/>
							<Setter Property="Margin" Value="-1"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type controlStyles:USDTab}" BasedOn="{StaticResource BaseUSDTab}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controlStyles:USDTab}">
					<Border x:Name="Border" BorderBrush="Transparent" BorderThickness="0,0,0,0" CornerRadius="0,0,0,0" >
						<Grid>
							<DockPanel>
								<TextBlock x:Name="ContentSite" DockPanel.Dock="Left" Margin="20,5,20,5" VerticalAlignment="Center" FontSize="12" FontFamily="Segoe UI" Foreground="#666666">
								<ContentPresenter ContentSource="Header" />
								</TextBlock>
								<Button x:Name="CloseButton" DockPanel.Dock="Right" Style="{StaticResource CloseButtonStyle}" Foreground="Black" Visibility="Collapsed" Command="usd:ActionCommands.CloseControl"/>
							</DockPanel>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="#9CB6C5"/>
							<Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
							<Setter TargetName="Border" Property="Background" Value="#F2F2F2" />
							<Setter TargetName="ContentSite" Property="Foreground" Value="#262626" />
							<Setter TargetName="ContentSite" Property="FontWeight" Value="Bold"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Bottom">
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="CloseButtonAvailable" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="CloseButton" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Top"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Bottom"/>
							</MultiTrigger.Conditions>
							<Setter Property="Margin" Value="-1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Left"/>
							</MultiTrigger.Conditions>
							<Setter Property="Padding" Value="11,2,14,2"/>
							<Setter Property="Margin" Value="-1"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="TabStripPlacement" Value="Right"/>
							</MultiTrigger.Conditions>
							<Setter Property="Padding" Value="14,2,11,2"/>
							<Setter Property="Margin" Value="-1"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TabControl}">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Margin" Value="-1,0,0,0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="MinWidth" Value="10"/>
		<Setter Property="MinHeight" Value="10"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Continue">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition Height="1"/>
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>
						<Border Name="BottomBorder" Grid.Row="1" BorderBrush="{DynamicResource SelectedForegroundBrush}" BorderThickness="0,1,0,0" Margin="0,0,0,0" />
						<TabPanel x:Name="HeaderPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
						<Grid x:Name="ContentPanel" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Continue" Grid.Row="2" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Continue">
							<Border BorderThickness="1,0,1,1" BorderBrush="{DynamicResource SelectedForegroundBrush}" Margin="1,0,0,0"/>
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type usdPanelLayouts:USDDeckTabPanel}">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="MinWidth" Value="10"/>
		<Setter Property="MinHeight" Value="10"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type usdPanelLayouts:USDDeckTabPanel}">

					<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Continue">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>
						<TabPanel x:Name="HeaderPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
						<Grid x:Name="ContentPanel" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Continue" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Continue">
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="2,2,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Grid>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="HasOneItem" Value="true">
							<Setter TargetName="HeaderPanel" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type usdPanelLayouts:USDDeckPanel}">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="MinWidth" Value="10"/>
		<Setter Property="MinHeight" Value="10"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type usdPanelLayouts:USDDeckPanel}">
					<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Continue">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>
						<Grid x:Name="ContentPanel" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Continue" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Continue">
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<!--Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/-->
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type usdPanelLayouts:USDTabPanel}">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="MinWidth" Value="10"/>
		<Setter Property="MinHeight" Value="10"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type usdPanelLayouts:USDTabPanel}">
					<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Continue">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>
						<TabPanel x:Name="HeaderPanel" Background="Transparent" IsItemsHost="true" Margin="1,2,2,0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1">
						</TabPanel>
						<Border Grid.Column="0" Grid.Row="1" BorderBrush="#9CB6C5" BorderThickness="1,1,1,1" Margin="0">
							<Grid x:Name="ContentPanel" Background="Transparent" KeyboardNavigation.DirectionalNavigation="Continue"  KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Continue">
								<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type usdPanelLayouts:USDCollapsePanel}">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type usdPanelLayouts:USDCollapsePanel}">
					<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Continue">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>
						<TabPanel x:Name="HeaderPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
						<Grid x:Name="ContentPanel" Grid.Column="0" Background="Transparent" KeyboardNavigation.DirectionalNavigation="Continue" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Continue">
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
						</Trigger>
						<Trigger Property="HasOneItem" Value="true">
							<Setter TargetName="HeaderPanel" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<!--Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/-->
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="USDDebuggerTab" TargetType="{x:Type TabItem}" BasedOn="{StaticResource BaseUSDTab}">
		<Setter Property="Background" Value="Transparent"></Setter>
	</Style>
	<Style TargetType="{x:Type usd:DynamicsBaseHostedControl}">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
	</Style>
	<!--EndRegion-->

	<!-- Region Toolbar -->
	<Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder}"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder}"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ToolBarButtonPressedBorder}"/>
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonPressed}"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
							<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{StaticResource NormalBrush}"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Bd" Background="Transparent" CornerRadius="0" SnapsToDevicePixels="true">
						<Image Source="/UnifiedServiceDesk;component/imageResources/More_16.png" Margin="2,4,2,0" Width="16" Height="16" VerticalAlignment="Bottom" HorizontalAlignment="Right"
								   AutomationProperties.Name="More Menu"></Image>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="Background" Value="Transparent"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Bd" Background="Transparent" CornerRadius="0" SnapsToDevicePixels="true">
						<Image Source="/UnifiedServiceDesk;component/imageResources/More_16.png" Margin="2,4,2,0" Width="16" Height="16" VerticalAlignment="Bottom" HorizontalAlignment="Right"
								   AutomationProperties.Name="More Menu"></Image>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="Background" Value="Transparent"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
						<Rectangle>
							<Rectangle.Fill>
								<DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
									<DrawingBrush.Drawing>
										<DrawingGroup>
											<GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
											<GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
										</DrawingGroup>
									</DrawingBrush.Drawing>
								</DrawingBrush>
							</Rectangle.Fill>
						</Rectangle>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Cursor" Value="SizeAll"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
		<Setter Property="Margin" Value="0,0,11,0"/>
		<Setter Property="CornerRadius" Value="3,3,3,3"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="CornerRadius" Value="0,0,0,0"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="{x:Type ToolBar}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
		<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
						<Grid x:Name="OverflowGrid" HorizontalAlignment="Right" Margin="0,0,-11,0">
							<ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
										  IsEnabled="{TemplateBinding HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" Visibility="Collapsed"
										  Margin="0,0,0,5">
							</ToggleButton>
							<Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="True" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false">
								<themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
									<Border x:Name="ToolBarSubMenuBorder" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1" Background="{StaticResource ToolBarSubMenuBackground}" RenderOptions.ClearTypeHint="Enabled">
										<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Continue" FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Continue" WrapWidth="200"/>
									</Border>
								</themes:SystemDropShadowChrome>
							</Popup>
						</Grid>
						<Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
							<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Continue">
								<Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Style="{StaticResource ToolBarThumbStyle}"/>
								<ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
								<ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</DockPanel>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasOverflowItems" Value="true">
							<Setter Property="Visibility" TargetName="OverflowButton" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsOverflowOpen" Value="true">
							<Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
						</Trigger>
						<Trigger Property="Header" Value="{x:Null}">
							<Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="ToolBarTray.IsLocked" Value="true">
							<Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
							<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
							<Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
							<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
						</Trigger>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
							<Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
							<Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
							<Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
							<Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
							<Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
							<Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
							<Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
							<Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
							<Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
							<Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
							<Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
							<Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
							<Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
							<Setter Property="Background" Value="Transparent"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
							<Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Continue"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="Background" Value="Transparent"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type control:ToolbarMenuItem}">
		<Setter Property="Foreground" Value="#262626"/>
		<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
	</Style>
	<Style TargetType="{x:Type control:ToolbarContextMenu}" BasedOn="{StaticResource {x:Type ContextMenu}}">
		<Setter Property="Foreground" Value="#262626"/>
		<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
		<Setter Property="FontSize" Value="12" />
	</Style>

	<!-- Toolbar Button Styles -->
	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle SnapsToDevicePixels="true" Margin="3" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="LabelStyle" TargetType="{x:Type Label}" BasedOn="{x:Null}">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Grid>
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RecognizesAccessKey="True"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ToolbarButtonTemplate" TargetType="{x:Type control:ToolbarButton}" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type control:ToolbarButton}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<StackPanel Orientation="Horizontal" Margin="5,2,10,4">
							<Image Margin="0,0,2,0" x:Name="Icon" VerticalAlignment="Center" MaxWidth="16" MaxHeight="16" Source="{TemplateBinding Image}"/>
							<ContentPresenter Margin="{TemplateBinding Margin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</StackPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Image" Value="{x:Null}">
							<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonPressed}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--EndRegion-->

	<!-- Region Drop Down Button -->
	<DataTemplate x:Key="DropDownMenuIconStyle">
		<Image Source="{Binding XPath=.}"></Image>
	</DataTemplate>
	<ControlTemplate x:Key="DropDownMenuItemTemplate" TargetType="MenuItem">
		<Border Name="Border">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
					<ColumnDefinition Width="13"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
						  ContentTemplate="{StaticResource DropDownMenuIconStyle}"
						  Margin="6,0,6,0"
						  VerticalAlignment="Center"
						  ContentSource="Icon" Grid.Column="0"
						  Height="16" Width="16" />
				<Border x:Name="Check"
				Width="13" Height="13"
				Visibility="Collapsed"
				Margin="6,0,6,0"
				Background="{StaticResource NormalBrush}"
				BorderThickness="1"
				BorderBrush="{StaticResource NormalBorderBrush}">
					<Path x:Name="CheckMark"
				Width="7" Height="7"
				Visibility="Hidden"
				SnapsToDevicePixels="False"
				Stroke="{StaticResource GlyphBrush}"
				StrokeThickness="2"
				Data="M 0 0 L 7 7 M 0 7 L 7 0" />
				</Border>
				<ContentPresenter x:Name="HeaderHost"
						  Grid.Column="1"
						  ContentSource="Header"
						  RecognizesAccessKey="True"
						  Margin="5,2,0,2"
						  VerticalAlignment="Center"/>
				<TextBlock x:Name="InputGestureText"
				   Grid.Column="2"
				   Text="{TemplateBinding InputGestureText}"
				   Margin="5,2,0,2"
				   DockPanel.Dock="Right" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsCheckable" Value="true">
				<Setter TargetName="Check" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="ToolBarDropDownButtonStyle" TargetType="{x:Type control:DropDownButton}" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type control:DropDownButton}">
					<Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<!--<Label>-->
						<StackPanel Orientation="Horizontal" Margin="8,2,8,4">
                            <Image Margin="2,2,2,2" x:Name="Icon" VerticalAlignment="Center" Width="16" Height="16" Source="{TemplateBinding Image}"/>                            
							<ContentPresenter Margin="{TemplateBinding Margin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<Path Style="{StaticResource DownArrowGeometryStyle}" Margin="4,4,0,0"/>
						</StackPanel>
						<!--</Label>-->
					</Border>
					<ControlTemplate.Triggers>
                        <Trigger Property="Image" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{StaticResource ToolBarSplitButtonSelectedBrush}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsChecked" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ToolBarSplitButtonSelectedBrush}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsKeyboardFocused" Value="True"/>
								<Condition Property="IsChecked" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ToolBarSplitButtonSelectedBrush}"/>
						</MultiTrigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{StaticResource ToolBarSplitButtonSelectedBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--EndRegion-->

	<!-- Region Split Button -->
	<Style x:Key="MainButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
		<Setter Property="Margin" Value="-2,-2,0,-2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Rectangle x:Name="rect" Fill="Transparent" Stroke="#00000000" />
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsDefaulted" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="rect" Value="#00FFFFFF"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Fill" TargetName="rect" Value="#E3E3DC"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ToolBarSplitButtonStyle" TargetType="{x:Type control:SplitButton}" >
		<Setter Property="FontSize" Value="16" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type control:SplitButton}">
					<Border Margin="4,0,4,0" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<StackPanel Orientation="Horizontal">
							<Button x:Name="PART_Button" Style="{DynamicResource ButtonStyle}">
								<StackPanel Orientation="Horizontal">
									<Image Margin="2,2,2,2" VerticalAlignment="Center" Width="16" Height="16" Source="{TemplateBinding Image}"/>
									<ContentPresenter Margin="{TemplateBinding Margin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</StackPanel>
							</Button>
							<Separator Style="{DynamicResource VerticalSeparatorStyle}" Height="Auto"/>
							<Border x:Name="SplitDropDown">
							<Path Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z"  Height="5" Margin="2,2,4,0"/>
							</Border>
						</StackPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger SourceName="PART_Button" Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="Transparent" TargetName="SplitDropDown"/>
							<Setter Property="Background" Value="{StaticResource ToolBarButtonHover}" TargetName="PART_Button"/>
						</Trigger>
						<Trigger SourceName="SplitDropDown" Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource ToolBarButtonHover}" TargetName="SplitDropDown"/>
							<Setter Property="Background" Value="Transparent" TargetName="PART_Button"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{StaticResource ToolBarSplitButtonSelectedBrush}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter Property="Background" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsChecked" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ToolBarSplitButtonSelectedBrush}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsKeyboardFocused" Value="True"/>
								<Condition Property="IsChecked" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ToolBarSplitButtonSelectedBrush}"/>
						</MultiTrigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{StaticResource ToolBarSplitButtonSelectedBrush}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<DataTemplate x:Key="SplitMenuIconStyle">
		<Image Source="{Binding XPath=.}"></Image>
	</DataTemplate>
	<ControlTemplate x:Key="SplitMenuItemTemplate" TargetType="MenuItem">
		<Border Name="Border">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
					<ColumnDefinition Width="13"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
						  ContentTemplate="{StaticResource SplitMenuIconStyle}"
						  Margin="6,0,6,0"
						  VerticalAlignment="Center"
						  ContentSource="Icon"
						  Height="16" Width="16"/>
				<Border x:Name="Check"
				Width="13" Height="13"
				Visibility="Collapsed"
				Margin="6,0,6,0"
				Background="{StaticResource NormalBrush}"
				BorderThickness="1"
				BorderBrush="{StaticResource NormalBorderBrush}">
					<Path x:Name="CheckMark"
				Width="7" Height="7"
				Visibility="Hidden"
				SnapsToDevicePixels="False"
				Stroke="{StaticResource GlyphBrush}"
				StrokeThickness="2"
				Data="M 0 0 L 7 7 M 0 7 L 7 0" />
				</Border>
				<ContentPresenter x:Name="HeaderHost"
						  Grid.Column="1"
						  ContentSource="Header"
						  RecognizesAccessKey="True"
						  Margin="5,2,0,2"
						  VerticalAlignment="Center"/>
				<TextBlock x:Name="InputGestureText"
				   Grid.Column="2"
				   Text="{TemplateBinding InputGestureText}"
				   Margin="5,2,0,2"
				   DockPanel.Dock="Right" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsCheckable" Value="true">
				<Setter TargetName="Check" Property="Visibility" Value="Visible"/>
				<Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!--EndRegion-->

	<!-- Region USD -->
	<Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
		<Setter Property="Focusable" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid
Width="15"
Height="13"
Background="Transparent">
						<Path x:Name="ExpandPath"
HorizontalAlignment="Left"
VerticalAlignment="Center"
Margin="1,1,1,1"
Fill="{StaticResource GlyphBrush}"
Data="M 4 0 L 8 4 L 4 8 Z"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
   Value="True">
							<Setter Property="Data"
  TargetName="ExpandPath"
  Value="M 0 4 L 8 4 L 4 8 Z"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type usd:TreeBarView}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{x:Static Microsoft_Windows_Themes:ClassicBorderDecorator.ClassicBorderBrush}"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type usd:TreeBarView}">
					<Microsoft_Windows_Themes:ClassicBorderDecorator BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="Sunken" Background="{TemplateBinding Background}">
						<ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="true" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter />
						</ScrollViewer>
					</Microsoft_Windows_Themes:ClassicBorderDecorator>
					<ControlTemplate.Triggers>
						<!--Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
						</Trigger-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<!--Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel/>
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers-->
	</Style>
	<Style TargetType="{x:Type usd:TreeBarItem}">
		<Setter Property="IsExpanded" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type usd:TreeBarItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="19" Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
						<Border Name="Bd" Grid.Column="1" Height="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3">
							<StackPanel Orientation="Horizontal">
								<Image Margin="2,2,2,2" x:Name="Icon" Width="16" Height="16" Source="{TemplateBinding Image}"/>
								<Label Content="{TemplateBinding Text}" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Padding="0" />
								<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Visibility="Collapsed" />
							</StackPanel>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Image" Value="{x:Null}">
							<Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false"/>
								<Condition Property="Width" Value="Auto"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeader" Value="false"/>
								<Condition Property="Height" Value="Auto"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource FocusBackgroundBrush}"/>
							<Setter Property="Foreground" Value="{DynamicResource FocusForegroundBrush}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource FocusBackgroundBrush}"/>
							<Setter Property="Foreground" Value="{DynamicResource FocusForegroundBrush}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="USDRibbonWindow" TargetType="{x:Type usdDesktop:RibbonDesktop}">
		<Setter Property="Background" Value="{DynamicResource WindowHeaderStyle}"/>
		<Setter Property="MinWidth" Value="1024"/>
		<Setter Property="Visibility" Value="Visible"/>
		<Setter Property="WindowState" Value="Normal"/>
		<Setter Property="SizeToContent" Value="Manual"/>
		<Setter Property="Title" Value="Unified Service Desk"/>
		<Setter Property="Icon" Value="/UnifiedServiceDesk;component/imageResources/DynamicsIcon.png"/>
		<!--Setter Property="shell:WindowChrome.WindowChrome" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type ribbon:Ribbon},ResourceId=WindowChromeGeneric}}"/-->
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="BorderThickness" Value="0"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ribbon:RibbonWindow}">
					<ControlTemplate.Resources>
						<Style TargetType="{x:Type Button}" x:Key="&#303;">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type Button}">
										<Grid Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
											<Border x:Name="OuterTopLeftBorder" BorderThickness="1,1,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
											<Border x:Name="OuterBottomRightBorder" BorderThickness="0,0,1,1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
											<Border x:Name="InnerTopLeftBorder" BorderThickness="1,1,0,0" Margin="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
											<Border x:Name="InnerBottomRightBorder" BorderThickness="0,0,1,1" Margin="1" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
											<ContentPresenter HorizontalAlignment="Center"
				  VerticalAlignment="Center"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsPressed" Value="True">
												<Setter TargetName="OuterTopLeftBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
												<Setter TargetName="OuterBottomRightBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
												<Setter TargetName="InnerTopLeftBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
												<Setter TargetName="InnerBottomRightBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ControlTemplate.Resources>

					<Grid>
						<Border Name="NonClientAreaBorder"
		BorderThickness="{Binding Path=WindowNonClientFrameThickness, Source={x:Static shell:SystemParameters2.Current}}"
		BorderBrush="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
							<Border Name="PART_ClientAreaBorder"
		Background="{TemplateBinding Background}"
		BorderBrush="{TemplateBinding BorderBrush}"
		BorderThickness="{TemplateBinding BorderThickness}"/>
						</Border>

						<Border BorderThickness="1,1,0,0"
		BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>

						<Border BorderThickness="0,0,1,1"
		BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>

						<Border Name="WindowHighlightBorder"
		BorderThickness="1,1,0,0"
		Margin="1"
		BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>

						<Border Name="WindowShadowBorder"
		BorderThickness="0,0,1,1"
		Margin="1"
		BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>

						<Border Name="MiddleBorder"
		BorderThickness="1"
		Margin="2"
		BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>

						<Grid Name="ButtonPanel"
	  Margin="{Binding Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness, RelativeSource={RelativeSource TemplatedParent}}"
	  Height="{Binding Path=(shell:WindowChrome.WindowChrome).CaptionHeight, RelativeSource={RelativeSource TemplatedParent}}"
	  Background="{DynamicResource {ComponentResourceKey ResourceId=ActiveCaptionGradient, TypeInTargetAssembly={x:Type ribbon:Ribbon}}}"
	  VerticalAlignment="Top">
							<Image Name="PART_Icon"
	   shell:WindowChrome.IsHitTestVisibleInChrome="True"
	   Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"
	   Width="{Binding Path=SmallIconSize.Width, Source={x:Static shell:SystemParameters2.Current}}"
	   Height="{Binding Path=SmallIconSize.Height, Source={x:Static shell:SystemParameters2.Current}}"
	   Margin="3,0,0,0"
	   HorizontalAlignment="Left"
	   VerticalAlignment="Center"/>

							<Grid HorizontalAlignment="Right"
	  Width="{Binding Path=WindowCaptionButtonsLocation.Width, Source={x:Static shell:SystemParameters2.Current}}"
	  Height="{Binding Path=WindowCaptionButtonsLocation.Height, Source={x:Static shell:SystemParameters2.Current}}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="2"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="2"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="2"/>
								</Grid.ColumnDefinitions>
								<Button Name="PART_MinimizeWindowButton"
		Grid.Column="1"
		Margin="0,2"
		shell:WindowChrome.IsHitTestVisibleInChrome="True"
		Command="shell:SystemCommands.MinimizeWindowCommand"
		Focusable="true"
		Style="{StaticResource &#303;}">
									<Path x:Name="MinimizeWindowButtonGlyph"
	  Stroke="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
	  StrokeThickness="2">
										<Path.Data>
											<PathGeometry>
												<PathFigure StartPoint="0,6">
													<LineSegment Point="6,6"/>
												</PathFigure>
											</PathGeometry>
										</Path.Data>
									</Path>
								</Button>
								<Button Name="PART_RestoreWindowButton"
		Grid.Column="2"
		Margin="0,2"
		shell:WindowChrome.IsHitTestVisibleInChrome="True"
		Command="shell:SystemCommands.RestoreWindowCommand"
		Focusable="true"
		Style="{StaticResource &#303;}"
		Visibility="Collapsed">
									<Path x:Name="RestoreWindowButtonGlyph"
	  Stroke="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
	  StrokeThickness="1">
										<Path.Data>
											<PathGeometry>
												<PathFigure StartPoint="0,3" IsClosed="False">
													<LineSegment Point="0,8" />
													<LineSegment Point="5,8" />
													<LineSegment Point="5,3" />
													<LineSegment Point="0,3" />
													<LineSegment Point="0,4" />
													<LineSegment Point="5,4" />
													<LineSegment Point="5,5" />
													<LineSegment Point="7,5" />
													<LineSegment Point="7,0" />
													<LineSegment Point="2,0" />
													<LineSegment Point="2,1" />
													<LineSegment Point="7,1" />
												</PathFigure>
												<PathFigure StartPoint="2,1" IsClosed="False">
													<LineSegment Point="2,3" />
												</PathFigure>
											</PathGeometry>
										</Path.Data>
									</Path>
								</Button>
								<Button Name="PART_MaximizeWindowButton"
		Grid.Column="2"
		Margin="0,2"
		shell:WindowChrome.IsHitTestVisibleInChrome="True"
		Command="shell:SystemCommands.MaximizeWindowCommand"
		Focusable="true"
		Style="{StaticResource &#303;}">
									<Path x:Name="MaximizeWindowButtonGlyph"
	  Stroke="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
	  StrokeThickness="1">
										<Path.Data>
											<PathGeometry>
												<PathFigure StartPoint="0,0" IsClosed="False">
													<LineSegment Point="0,8" />
													<LineSegment Point="8,8" />
													<LineSegment Point="8,0" />
													<LineSegment Point="0,0" />
												</PathFigure>
												<PathFigure StartPoint="0.5,1">
													<LineSegment Point="7.5,1" />
												</PathFigure>
											</PathGeometry>
										</Path.Data>
									</Path>
								</Button>
								<Button Name="PART_CloseWindowButton"
		Grid.Column="4"
		Margin="0,2"
		shell:WindowChrome.IsHitTestVisibleInChrome="True"
		Command="shell:SystemCommands.CloseWindowCommand"
		Focusable="true"
		Style="{StaticResource &#303;}">
									<Path x:Name="CloseWindowButtonGlyph"
	  Stroke="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
	  StrokeThickness="1.5">
										<Path.Data>
											<PathGeometry>
												<PathFigure StartPoint="0,0">
													<LineSegment Point="8,7"/>
												</PathFigure>
												<PathFigure StartPoint="8,0">
													<LineSegment Point="0,7"/>
												</PathFigure>
											</PathGeometry>
										</Path.Data>
									</Path>
								</Button>
							</Grid>
						</Grid>

						<Border BorderThickness="{Binding Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness, RelativeSource={RelativeSource TemplatedParent}}">
							<Grid>
								<AdornerDecorator>
									<ContentPresenter Name="PART_RootContentPresenter"/>
								</AdornerDecorator>
								<ResizeGrip x:Name="WindowResizeGrip"
			shell:WindowChrome.ResizeGripDirection="BottomRight"
			HorizontalAlignment="Right"
			VerticalAlignment="Bottom"
			Visibility="Collapsed"
			IsTabStop="false"/>
							</Grid>
						</Border>

					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsActive" Value="False">
							<Setter TargetName="ButtonPanel" Property="Background" Value="{DynamicResource {ComponentResourceKey ResourceId=InactiveCaptionGradient, TypeInTargetAssembly={x:Type ribbon:Ribbon}}}"/>
							<Setter TargetName="MiddleBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveBorderBrushKey}}"/>
						</Trigger>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter TargetName="PART_MaximizeWindowButton" Property="Visibility" Value="Collapsed"/>
							<Setter TargetName="PART_RestoreWindowButton" Property="Visibility" Value="Visible"/>
						</Trigger>
						<DataTrigger Binding="{Binding Path=HighContrast, Source={x:Static shell:SystemParameters2.Current}}" Value="True">
							<Setter TargetName="PART_MinimizeWindowButton" Property="Width" Value="18"/>
							<Setter TargetName="PART_MaximizeWindowButton" Property="Width" Value="18"/>
							<Setter TargetName="PART_RestoreWindowButton" Property="Width" Value="18"/>
							<Setter TargetName="PART_CloseWindowButton" Property="Width" Value="18"/>
						</DataTrigger>
						<Trigger Property="Icon" Value="{x:Null}">
							<Setter TargetName="PART_Icon" Property="Source" Value="/UnifiedServiceDesk;component/imageResources/DynamicsIcon.png"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Window.ResizeMode"
		   Value="CanResizeWithGrip"/>
								<Condition Property="Window.WindowState"
		   Value="Normal"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="WindowResizeGrip"
		Property="Visibility"
		Value="Visible"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>
	<Style TargetType="{x:Type usdstyle:ControlHeader}">
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Background" Value="Blue"/>
		<Setter Property="Height" Value="10"/>
	</Style>
	<!--EndRegion-->

	<!--Region NotesControlStyles-->
	<Style x:Key="NotesControlTextBoxStyle" TargetType="{x:Type TextBox}">
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="BorderBrush" Value="#D8D8D8"/>
		<Setter Property="Foreground" Value="#262626"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="MinLines" Value="12"/>
		<Setter Property="MaxLines" Value="12" />
	</Style>
	<Style x:Key="NotesControlTextBlockBorderStyle" TargetType="{x:Type Border}">
		<Style.Triggers>
			<DataTrigger Binding="{Binding ElementName=UserText,Path=IsFocused}" Value="True">
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="BorderBrush" Value="#D8D8D8"/>
			</DataTrigger>
			<DataTrigger Binding="{Binding ElementName=UserText,Path=IsFocused}" Value="False">
				<Setter Property="BorderThickness" Value="0" />
			</DataTrigger>
		</Style.Triggers>

		<Setter Property="BorderThickness" Value="0"/>
	</Style>
	<Style x:Key="NotesControlWatermarkStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseFontStyle}">
		<Setter Property="Foreground" Value="#8E8E8E"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontStyle" Value="Italic"/>
	</Style>
	<!--EndRegion-->

	<!--Region Status Bar-->
	<Style x:Key="StatusBarStyle" TargetType="{x:Type StatusBar}">
		<Setter Property="Margin" Value="0,3,0,0"/>
		<Setter Property="Height" Value="29"/>
		<Setter Property="Background" Value="#ECECEC"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
	</Style>
	<Style x:Key="StatusBarSeparatorStyle" TargetType="{x:Type Separator}">
		<Setter Property="Visibility" Value="Collapsed"/>
	</Style>
	<Style x:Key="StatusBarTimerBaseStyle" BasedOn="{StaticResource BaseFontStyle}">
		<Setter Property="Control.HorizontalAlignment" Value="Left"></Setter>
		<Setter Property="Control.VerticalAlignment" Value="Center"></Setter>
		<Setter Property="Control.Margin" Value="8,0,0,0"></Setter>
		<Setter Property="Control.FontSize" Value="12"></Setter>
		<Setter Property="Control.Foreground" Value="#666666"></Setter>
	</Style>
	<Style x:Key="StatusBarClockLabelStyle" BasedOn="{StaticResource StatusBarTimerBaseStyle}" TargetType="{x:Type TextBlock}">
		<Setter Property="Visibility" Value="Collapsed"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
	</Style>
	<Style x:Key="StatusBarTimerTextStyle" BasedOn="{StaticResource StatusBarTimerBaseStyle}" TargetType="{x:Type TextBlock}">
		<Setter Property="Margin" Value="10,0,0,0"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
	</Style>
	<!--EndRegion-->

	<!-- Region USDTabToolbarTrayStyle -->
	<Style x:Key="USDTabToolbarTrayStyle" TargetType="ToolBarTray">
		<Setter Property="Focusable" Value="true"/>
		<Setter Property="Background" Value="{StaticResource WindowHeaderStyle}"/>
	</Style>
	<!--EndRegion-->
</ResourceDictionary>
<!--EndRegion-->
